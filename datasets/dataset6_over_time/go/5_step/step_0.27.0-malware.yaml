package:
  name: step
  version: 0.27.0
  epoch: 0
  description: A zero trust swiss army knife for working with X509, OAuth, JWT, OATH OTP, etc.
  copyright:
    - license: Apache-2.0

environment:
  contents:
    keyring:
      - https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
      - ./melange.rsa.pub
    repositories:
      - https://packages.wolfi.dev/os
      
pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/tdunlap607/cli
      tag: v0.27.0-m
      expected-commit: 29247fdb71dff95cd03af45b04c3f603b60876a0

  - uses: go/build
    with:
      packages: ./cmd/step
      output: step
      ldflags: -s -w -X main.Version=${{package.version}}

update:
  enabled: true
  github:
    identifier: tdunlap607/cli
    strip-prefix: v

test:
  pipeline:
    - name: Verify step-cli installation
      runs: |
        step --version
    - name: Test JSON Web Keys (JWKs)
      runs: |
        # create JWKs
        step crypto jwk create pub.json key.json --no-password --insecure
        [ -f pub.json ]
        [ -f key.json ]

        # add the public key to a keyset
        cat pub.json | step crypto jwk keyset add keys.json
    - name: Test JSON Web Tokens (JWTs)
      runs: |
        echo "Creating and signing a JWT that expires in 2 minutes"
        JWT=$(step crypto jwt sign \
            --key key.json \
            --iss "issuer@example.com" \
            --aud "audience@example.com" \
            --sub "subject@example.com" \
            --exp $(( $(date +%s) + 120 )))

        echo "Verifying the JWT"
        echo "$JWT" | step crypto jwt verify --jwks keys.json --iss "issuer@example.com" --aud "audience@example.com"
    - name: Cleanup
      runs: |
        rm -f pub.json key.json keys.json
        unset JWT